/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        m1: m1 {
            compatible = "zmk,behavior-macro";
            label = "M1";
            #binding-cells = <0>;
            bindings = <&none &kp LS(W) &kp A &kp R &kp AMPS &kp P &kp N3 &kp A &kp C &kp E &kp DOT &kp EXCL &kp AT>;
        };

        m2: m2 {
            compatible = "zmk,behavior-macro";
            label = "M2";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp AT &kp D &kp LS(G) &kp N3 &kp P &kp N4 &kp N0 &kp LS(X) &kp I &kp AT_SIGN &kp EXCLAMATION>;
        };

        sort: sort {
            compatible = "zmk,behavior-macro";
            label = "SORT";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp S &kp F>;
        };

        selins: selins {
            compatible = "zmk,behavior-macro";
            label = "SELINS";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kp LSHFT &kp RIGHT &kp DOWN &kt LCTRL &kt LEFT_SHIFT &kp LEFT_ALT &kp N>;
        };

        pval: pval {
            compatible = "zmk,behavior-macro";
            label = "PVAL";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT &kp H &kp V &kp V>;
        };

        selcopy: selcopy {
            compatible = "zmk,behavior-macro";
            label = "SELCOPY";
            #binding-cells = <0>;
            bindings = <&kt LCTRL &kt LSHIFT &kp RIGHT &kp DOWN &kt LCTRL &kt LSHIFT &kp LC(C)>;
        };
    };

    behaviors {
        hm: hm {
            compatible = "zmk,behavior-hold-tap";
            label = "HM";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_dv {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  ENTER |  | SPACE | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC         &kp N1    &kp N2     &kp N3      &kp N4        &kp N5                                                  &kp N6                 &kp N7         &kp N8     &kp N9  &kp N0  &kp BACKSPACE
&kp TAB         &kp SQT   &kp COMMA  &kp PERIOD  &kp P         &kp Y                                                   &kp F                  &kp G          &kp C      &kp R   &kp L   &kp FSLH
&caps_word      &kp A     &kp O      &hm 2 E     &hm 3 U       &kp I                                                   &kp D                  &hm 4 H        &kp T      &kp N   &kp S   &kp MINUS
&mt LCTRL LPAR  &kp SEMI  &kp Q      &kp J       &kp K         &kp X                     &to 1         &m1             &kp B                  &kp M          &kp W      &kp V   &kp Z   &mt RCTRL RPAR
                                     &kp LCTRL   &kp LEFT_ALT  &mt LEFT_SHIFT BACKSPACE  &mt LGUI TAB  &mt RGUI ENTER  &mt RIGHT_SHIFT SPACE  &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "base_dv";
        };

        alternate {
            bindings = <
&kp ESC         &kp N1    &kp N2     &kp N3    &kp N4        &kp N5                                                 &kp N6            &kp N7         &kp N8   &kp N9  &kp N0  &kp BSPC
&kp TAB         &kp SQT   &kp COMMA  &kp DOT   &kp P         &kp Y                                                  &kp F             &kp G          &kp C    &kp R   &kp L   &kp FSLH
&caps_word      &hm 5 A   &kp O      &hm 2 E   &hm 3 U       &kp I                                                  &hm 6 D           &hm 4 H        &kp T    &kp N   &kp S   &kp MINUS
&mt LCTRL LPAR  &kp SEMI  &kp Q      &kp J     &kp K         &kp X                &kp LC(LA(DEL))  &kp LG(L)        &kp B             &kp M          &kp W    &kp V   &kp Z   &mt RCTRL RPAR
                                     &kp LGUI  &kp LEFT_ALT  &mt LSHFT BACKSPACE  &mt LCTRL TAB    &mt RCTRL ENTER  &mt RSHIFT SPACE  &kp BACKSPACE  &kp DEL
            >;

            label = "PC";
        };

        ordinal {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                     &trans           &trans             &trans             &kp LC(LA(LG(P)))  &kp LA(LC(UP))    &kp LA(LC(LG(N)))
&trans  &trans  &trans  &trans  &trans  &trans                     &kp HOME         &kp END            &kp LA(LC(LG(C)))  &kp LA(LC(LEFT))   &kp LA(LC(DOWN))  &kp LA(LC(RIGHT))
&trans  &trans  &trans  &trans  &trans  &trans                     &trans           &kp LEFT           &kp UP             &kp RIGHT          &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans  &to 0   &trans     &trans           &kp LA(LC(LG(M)))  &kp DOWN           &trans             &trans            &trans
                        &trans  &trans  &trans  &trans  &kp RCTRL  &kp RIGHT_SHIFT  &trans             &trans
            >;

            label = "ordinal";
        };

        rhs_no {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 0                     &kp CARET     &kp PRCNT   &kp ASTRK  &kp SLASH  &kp BACKSLASH         &trans
&trans      &trans        &trans        &trans        &trans        &trans                           &kp PLUS      &kp N7      &kp N8     &kp N9     &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&trans      &trans        &trans        &trans        &trans        &trans                           &kp MINUS     &kp N4      &kp N5     &kp N6     &kp LEFT_BRACKET      &kp RIGHT_BRACKET
&trans      &trans        &trans        &trans        &trans        &trans        &to 0   &kp GRAVE  &kp POUND     &kp N1      &kp N2     &kp N3     &kp LEFT_BRACE        &kp RIGHT_BRACE
                                        &trans        &trans        &trans        &trans  &kp EQUAL  &kp NUMBER_0  &kp PERIOD  &kp ENTER
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "rhs_no";
        };

        lhs_fn {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&kp LC(LS(ESCAPE))  &kp F1     &kp F2     &kp F3     &kp F4     &kp F5                                       &trans  &trans  &trans  &trans  &trans  &m2
&kp C_VOL_UP        &kp F6     &kp F7     &kp F8     &kp F9     &kp F10                                      &trans  &trans  &trans  &trans  &trans  &trans
&kp C_VOL_DN        &kp F11    &kp F12    &kp LG(C)  &kp LG(V)  &kp LG(X)                                    &trans  &trans  &trans  &trans  &trans  &trans
&kp K_MUTE          &kp LG(Z)  &kp LG(Y)  &kp LC(C)  &kp LC(V)  &kp LC(RIGHT)  &kp LS(LG(NUMBER_4))  &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                          &kp LC(Z)  &kp LC(Y)  &trans         &kp LG(LS(S))         &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
            label = "lhs_fn";
        };

        excel {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &selins       &trans            &selcopy          &trans             &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &sort         &kp K_CUT         &kp K_COPY        &kp K_PASTE        &trans            &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans        &kp LS(LC(LEFT))  &kp LS(LC(UP))    &kp LS(LC(RIGHT))  &kp LC(UP_ARROW)  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans            &kp LS(LC(DOWN))  &kp LC(LEFT)       &kp LC(DOWN)      &kp LC(RIGHT)
                        &trans  &trans  &trans  &trans  &trans  &kp LA(DOWN)  &trans            &trans
            >;

            label = "XOrd";
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans        &trans        &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans        &trans        &trans         &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp LG(LEFT)  &kp LG(UP)    &kp LG(RIGHT)  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans        &kp LG(DOWN)  &trans         &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans  &kp HOME      &kp END
            >;
        };
    };
};
